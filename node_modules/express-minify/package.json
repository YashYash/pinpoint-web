{
  "name": "express-minify",
  "author": {
    "name": "Breezewish"
  },
  "description": "An express middleware to automatically minify and cache your javascript and css files.",
  "homepage": "https://github.com/breeswish/express-minify",
  "version": "0.0.11",
  "main": "minify.js",
  "keywords": [
    "uglify",
    "minify",
    "express"
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/breeswish/express-minify.git"
  },
  "dependencies": {
    "coffee-script": "^1.7.1",
    "cssmin": "^0.4.1",
    "less": "^1.7.4",
    "node-sass": "^0.9.3",
    "on-headers": "^1.0.0",
    "stylus": "^0.47.3",
    "uglify-js": "^2.4.15"
  },
  "devDependencies": {
    "mocha": "~1.20.1",
    "supertest": "~0.13.0",
    "should": "~4.0.1",
    "async": "~0.9.0",
    "compression": "~1.0.8"
  },
  "scripts": {
    "test": "mocha --check-leaks --reporter dot"
  },
  "readme": "express-minify\n==============\n\nexpress-minify is an express middleware to automatically minify and cache your javascript and css files.\n\nIt also supports LESS/SASS/Stylus/CoffeeScript compiling and minifying.\n\n# Note\n\nFor better performance and more powerful features (eg: generate Javascript Maps), I recommend you to use [Grunt](http://gruntjs.com/) (The Javascript Task Runner)\nto complete these tasks such as minifying and LESS/SASS/Stylus/CoffeeScript compiling.\n\n# Installation\n\n```\nnpm install express-minify\n```\n\n# Usage\n\n```javascript\nvar minify = require('express-minify');\napp.use(minify());\n```\n\n## Options\n\n```javascript\napp.use(minify(\n{\n    js_match: /javascript/,\n    css_match: /css/,\n    sass_match: /scss/,\n    less_match: /less/,\n    stylus_match: /stylus/,\n    coffee_match: /coffeescript/,\n    cache: false\n}));\n```\n\n- `js_match`: `RegExp`\n  \n  matches JavaScript content-type.\n\n- `css_match`: `RegExp`\n  \n  matches css content-type.\n\n- `sass_match`: `RegExp`\n  \n  matches SASS content-type.\n\n- `less_match`: `RegExp`\n  \n  matches LESS content-type.\n\n- `stylus_match`: `RegExp`\n  \n  matches STYLUS content-type.\n\n- `coffee_match`: `RegExp`\n  \n  matches CoffeeScript content-type.\n\n- `cache`: `String | false`\n  \n  the directory for cache storage (must be writeable). Pass `false` to cache in the memory (not recommended).\n\n# Examples\n\n## Working with express-static:\n\n```javascript\napp.use(minify());\napp.use(express.static(__dirname + '/static'));\n```\n\n## Working with express-compression(gzip):\n\n```javascript\napp.use(compression());\napp.use(minify());\n```\n\n## Minify dynamic responses:\n\n```javascript\nvar responseJS = \n    \"(function(window, undefined)\\n\" +\n    \"{\\n\" +\n    \"\\n\" +\n    \"    var hello = 'hello';\\n\" +\n    \"\\n\" +\n    \"    var world = 'world';\\n\" +\n    \"\\n\" +\n    \"    alert(hello + world);\\n\" +\n    \"\\n\" +\n    \"})(window);\"\n\napp.use(minify());\napp.get('/response.js', function(req, res)\n{\n    res.setHeader('Content-Type', 'application/javascript');\n    res.end(responseJS);\n});\n```\n\n## Use file cache to improve performance:\n\n```javascript\napp.use(minify({cache: __dirname + '/cache'}));\napp.use(express.static(__dirname + '/static'));\n```\n\n## Parse and minify CoffeeScript/LESS/SASS/Stylus:\n\n```javascript\n// Test URL: http://localhost/auto_parsed_compressed.coffee\n\nexpress.static.mime.define(\n{\n    'text/coffeescript':  ['coffee'],\n    'text/less':          ['less'],\n    'text/x-scss':        ['scss'],\n    'text/stylus':        ['styl']\n});\n\napp.use(minify());\n```\n\n## Disable mangle for a specific response\n\nuse `response._no_mangle = true`.\n\nGenerally you may need this if you are using AngularJs:\n\n```javascript\napp.use(function(req, res, next)\n{\n    // do not mangle -angular.js files\n    if (/-angular\\.js$/.test(req.url)) {\n        res._no_mangle = true;\n    }\n    next();\n});\napp.use(minify());\n```\n\n## Disable minify or cache for a specific response\n\nIf you don't want to minify a specific response, just use: `response._no_minify = true`. Notice that this would also disabling CoffeeScript/SCSS/LESS/Stylus parsing for this response.\n\nIf you want to minify a response but don't want to cache it (for example, dynamic data), use: `response._no_cache = true`.\n\nExample:\n\n```javascript\napp.use(function(req, res, next)\n{\n    // for all *.min.css or *.min.js, do not minify it\n    if (/\\.min\\.(css|js)$/.test(req.url)) {\n        res._no_minify = true;\n    }\n    next();\n});\napp.use(minify());\n```\n\nYet another example:\n\n```javascript\napp.use(minify());\napp.get('/server_time_min.jsonp', function(req, res)\n{\n    var obj = {\n        'ok': true,\n        'data': {\n            'timestamp': new Date().getTime()\n        }\n    };\n\n    // minify this response, but do not cache it\n    res._no_cache = true;\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(\"callback(\" + JSON.stringify(obj, null, 4) + \");\");\n});\napp.get('/server_time.jsonp', function(req, res)\n{\n    var obj = {\n        'ok': true,\n        'data': {\n            'timestamp': new Date().getTime()\n        }\n    };\n\n    // do not minify this response\n    res._no_minify = true;\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(\"callback(\" + JSON.stringify(obj, null, 4) + \");\");\n});\n```\n\nWARNING: DO NOT set `_no_minify` between `res.write` and `res.end`. It may lose data!\n\n# Notice\n\nIf you are using `cluster`, it is strongly recommended to enable file cache.\n\n# Change log\n\n0.0.11\n\n- Update dependencies [#11](https://github.com/breeswish/express-minify/issues/11)\n\n0.0.10\n\n- Added tests\n\n- Fixed SASS compiling\n\n- Fixed express-compression compatibility\n\n0.0.9\n\n- Added support for `res._no_mangle` [#10](https://github.com/breeswish/express-minify/pull/10)\n\n0.0.8\n\n- Removed options of `whitelist` and `blacklist`\n\n- Added support for `res._no_cache` [#5](https://github.com/breeswish/express-minify/issues/5)\n\n- Node v0.10 compatible\n\n0.0.7\n\n- Changed `options`'s default `blacklist` to `[/\\.min\\.(css|js)$/]`\n\n- Replaced `uglifycss` with `cssmin`\n\n- Dropped support for `.sass` (https://github.com/andrew/node-sass/issues/12)\n\n- Fixed [#3](https://github.com/breeswish/express-minify/issues/3)\n\n0.0.6\n\n- Support for blacklist and whitelist [#2](https://github.com/breeswish/express-minify/issues/2)\n\n0.0.5\n\n- Added support for `res._no_minify`\n\n- Fixed [#1](https://github.com/breeswish/express-minify/issues/1)\n\n0.0.4\n\n- Support for LESS/SASS/Stylus/CoffeeScript parsing and minifying\n\n0.0.3\n\n- Support for file cache\n\n- Fixed the bug of non-string path\n\n0.0.2\n\n- Support for dynamic minifying\n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Breezewish\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/breeswish/express-minify/issues"
  },
  "_id": "express-minify@0.0.11",
  "dist": {
    "shasum": "31c613b5f183c6981813acaf45c9ae8f77dc3d2f"
  },
  "_from": "express-minify@",
  "_resolved": "https://registry.npmjs.org/express-minify/-/express-minify-0.0.11.tgz"
}
